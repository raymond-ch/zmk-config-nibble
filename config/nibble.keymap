/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

//--- Layer definition
#define BSE 0
#define EXT 1
#define LCK 2

//--- Bluetooth extra
#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4


/ {
	behaviors {
        th: toggle_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGGLE_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&tog>;
        };
    };
	
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
			// sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;

            bindings = <
            &kp ESC       &kp N1         &kp N2            &kp N3             &kp N4           &kp N5        &kp N6        &kp N7  &kp N8     &kp N9     &kp N0       &kp MINUS &kp EQUAL   &kp BSPC  &kp PRINTSCREEN
&none       &kp TAB       &kp Q          &kp W             &kp E              &kp R            &kp T         &kp Y         &kp U   &kp I      &kp O      &kp P        &kp LBKT  &kp RBKT    &kp BSLH  &kp DEL
&mo EXT     &th CAPS EXT  &kp A          &kp S             &kp D              &kp F            &kp G         &kp H         &kp J   &kp K      &kp L      &kp SEMI     &kp SQT               &kp RET   &kp PG_UP
&trans      &kp LSHFT     &trans         &kp Z             &kp X              &kp C            &kp V         &kp B         &kp N   &kp M      &kp COMMA  &kp DOT      &kp FSLH  &kp RSHFT   &kp UP    &kp PG_DN
&trans      &kp LCTRL     &kp LGUI       &kp LALT                                              &kp SPACE                           &kp RALT   &kp K_APP  &kp RCTRL    &kp LEFT              &kp DOWN  &kp RIGHT
            >;
        };
        extra_layer {
            label = "Extra";
            
            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;

            bindings = <
            &kp GRAVE     &kp F1         &kp F2            &kp F3             &kp F4           &kp F5        &kp F6        &kp F7  &kp F8     &kp F9    &kp F10      &kp F11   &kp F12     &trans    &kp PAUSE_BREAK
&kp C_MUTE  &trans        &bt BT0        &bt BT1           &bt BT2            &bt BT3          &bt BT4       &bt BT_CLR    &trans  &trans     &trans    &kp C_PREV   &kp C_PP  &kp C_NEXT  &trans    &kp INS
&trans      &trans        &kp C_AL_LOCK  &kp C_SLEEP       &trans             &trans           &trans        &trans        &trans  &trans     &trans    &trans       &trans                &trans    &kp HOME
&trans      &trans        &trans         &ext_power EP_ON  &ext_power EP_OFF  &trans           &out OUT_BLE  &out OUT_USB  &trans  &trans     &trans    &bootloader  &reset    &trans      &trans    &kp END
&trans      &trans        &trans         &trans                                                &trans                              &trans     &trans    &tog LCK     &trans                &trans    &trans
            >;
        };
        lock_layer {
            label = "Lock";
            
            sensor-bindings = <&inc_dec_kp LCAPS LCAPS>; // Disable rotary for this layer

            bindings = <
            &none         &none          &none             &none              &none            &none         &none         &none   &none      &none     &none        &none     &none       &none    &none
&none       &none         &none          &none             &none              &none            &none         &none         &none   &none      &none     &none        &none     &none       &none    &none
&trans      &none         &none          &none             &none              &none            &none         &none         &none   &none      &none     &none        &none                 &none    &none
&none       &none         &none          &none             &none              &none            &none         &none         &none   &none      &none     &none        &none     &none       &none    &none
&none       &none         &none          &none                                                 &none                               &none      &none     &trans       &none                 &none    &none
            >;  
        };		
    };
};



/*
You can define a new behavior node like this, notice the bindings line. First one is for hold (kp), second one is for tap (tog):
/ {
    behaviors {
        th: toggle_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGGLE_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&tog>;
        };
    };
};
*/